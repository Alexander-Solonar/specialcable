{"version":3,"file":"static/js/413.f1def674.chunk.js","mappings":"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","sources":["data/localArticle.js","pages/About/components/ArticleCard.jsx","pages/About/components/ArticleList.jsx","pages/About/ArticlesPage.jsx"],"sourcesContent":["export const localArticle = [\n  {\n    id: 'local',\n    title: {\n      ua: 'Основні види мідного кабелю та їх застосування',\n      en: 'Cable Cross-Section and Diameter: What’s the Difference?',\n    },\n    text: {\n      ua: 'Займаючись електромонтажем на власній ділянці або у власній квартирі, можна швидко помітити, що кабелі й проводи, які використовуються в монтажі, переважно мідні, рідше алюмінієві.',\n      en: 'When dealing with electrical installation on your own property or in your apartment, you will quickly notice that the cables and wires used in the installation are mostly copper, and less often aluminum.',\n    },\n    imgFullXl: require('../assets/images/imageFull-xl.webp'),\n    imgFullMl: require('../assets/images/imageFull-ml.webp'),\n  },\n];\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst ArticleCard = ({\n  id,\n  title,\n  imgPreviewSm,\n  imgPreviewMl,\n  imgPreviewXl,\n  isShowAllArticles,\n}) => {\n  const scrollPositionRef = useRef(0);\n  const { i18n } = useTranslation();\n  const location = useLocation();\n  const lng = i18n.resolvedLanguage;\n  const saveScroll = location?.state?.scroll?.current || 0;\n\n  const handleScroll = () => {\n    scrollPositionRef.current = window.scrollY;\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, saveScroll);\n    handleScroll();\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [saveScroll]);\n\n  return (\n    <li className=\"relative flex flex-col shadow-custom\">\n      <Link\n        to={`article/${id}`}\n        state={{\n          from: location,\n          scrollPosition: scrollPositionRef,\n          isShowAllArticles,\n        }}\n        className=\"relative box-border flex h-[184px] w-[152px] flex-col border border-white bg-gray transition duration-300 hover:border hover:border-vivid-orange hover:brightness-90 ml:h-[231px] ml:w-[160px] lg:h-[400px] lg:w-[280px]\"\n        aria-label={title[lng]}\n      >\n        <picture>\n          <source media=\"(max-width: 767px)\" srcSet={imgPreviewSm} />\n          <source media=\"(max-width: 1199px)\" srcSet={imgPreviewMl} />\n          <img src={imgPreviewXl} alt=\"cable\" loading=\"lazy\" />\n        </picture>\n      </Link>\n      <p className=\"pointer-events-none mt-3 w-[150px] text-[10px] font-bold uppercase leading-[1.3] tracking-[0.20em] ml:w-[160px] ml:text-xs lg:absolute lg:bottom-1 lg:left-5 lg:right-8 lg:h-16 lg:w-[280px] lg:text-sm lg:text-white\">\n        {title[lng]}\n      </p>\n    </li>\n  );\n};\n\nexport default ArticleCard;\n\nArticleCard.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  title: PropTypes.shape({\n    en: PropTypes.string.isRequired,\n    ua: PropTypes.string.isRequired,\n  }).isRequired,\n  imgPreviewSm: PropTypes.string.isRequired,\n  imgPreviewMl: PropTypes.string.isRequired,\n  imgPreviewXl: PropTypes.string.isRequired,\n  isShowAllArticles: PropTypes.bool.isRequired,\n};\n","import React, { useContext, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Context } from 'context/Context';\nimport PropTypes from 'prop-types';\nimport ArticleCard from './ArticleCard';\n\nconst ArticleList = ({ isShowAllArticles }) => {\n  const { articleList } = useContext(Context);\n  const scrollPositionRef = useRef(0);\n  const location = useLocation();\n\n  const saveScroll = location?.state?.scroll?.current || 0;\n\n  const articlesToShow = isShowAllArticles ? articleList : articleList.slice(0, 4);\n\n  const handleScroll = () => {\n    scrollPositionRef.current = window.scrollY;\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, saveScroll);\n    handleScroll();\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [saveScroll]);\n\n  return (\n    <ul className=\"mx-auto mb-12 mt-12 grid w-fit grid-cols-2 justify-items-center gap-5 sm:mt-10 ml:grid-cols-4\">\n      {articlesToShow.map(articleItem => (\n        <ArticleCard\n          key={articleItem.id}\n          {...articleItem}\n          isShowAllArticles={isShowAllArticles}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ArticleList;\n\nArticleList.propTypes = {\n  isShowAllArticles: PropTypes.bool.isRequired,\n};\n","import { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { localArticle } from 'data/localArticle.js';\nimport Container from 'components/common/Container';\nimport SectionTitle from 'components/common/SectionTitle';\nimport ArticleList from './components/ArticleList';\n\nconst ArticlesPage = () => {\n  const location = useLocation();\n  const [isShowAllArticles, setIsShowAllArticles] = useState(\n    location.state?.showAllArticles ?? false\n  );\n  const { t, i18n } = useTranslation();\n  const lng = i18n.resolvedLanguage;\n\n  const toggleArticles = () => {\n    setIsShowAllArticles(!isShowAllArticles);\n  };\n\n  return (\n    <section className=\"w-full pb-10 ml:pb-16 lg:pb-24\">\n      <Container>\n        <div className=\"flex w-full flex-wrap-reverse justify-center gap-10 pb-8 ml:flex-nowrap ml:justify-between\">\n          <div className=\"flex flex-col items-start gap-y-4 sm:gap-y-8\">\n            <SectionTitle title=\"статьи\" />\n            <h2 className=\"text-xs font-bold uppercase tracking-wider sm:text-sm\">\n              {localArticle[0].title[lng]}\n            </h2>\n            <p className=\"max-w-[580px] indent-7 text-sm ml:text-base\">\n              {localArticle[0].text[lng]}\n            </p>\n            <Link\n              to=\"article/local\"\n              state={{ from: location }}\n              className=\"bg-vivid-orange px-5 py-2 text-xs uppercase tracking-widest text-white transition duration-300 hover:brightness-90 sm:text-sm\"\n            >\n              {t('articlesSection.btnReadArticle')}\n            </Link>\n          </div>\n          <div className=\"hidden sm:flex sm:flex-col\">\n            <img src={localArticle[0].imgFullXl} alt=\"cable\" />\n          </div>\n        </div>\n\n        <ArticleList isShowAllArticles={isShowAllArticles} />\n\n        <button\n          className=\"mx-auto block bg-vivid-orange px-5 py-1 text-xs uppercase tracking-widest text-white transition duration-300 hover:brightness-90 sm:text-sm\"\n          onClick={toggleArticles}\n        >\n          {t(`articlesSection.${isShowAllArticles ? 'btnHide' : 'btnShowAllArticles'}`)}\n        </button>\n      </Container>\n    </section>\n  );\n};\n\nexport default ArticlesPage;\n"],"names":["localArticle","id","title","ua","en","text","imgFullXl","require","imgFullMl","_ref","_location$state","_location$state$scrol","imgPreviewSm","imgPreviewMl","imgPreviewXl","isShowAllArticles","scrollPositionRef","useRef","i18n","useTranslation","location","useLocation","lng","resolvedLanguage","saveScroll","state","scroll","current","handleScroll","window","scrollY","useEffect","scrollTo","addEventListener","removeEventListener","_jsxs","className","children","_jsx","Link","to","from","scrollPosition","media","srcSet","src","alt","loading","articleList","useContext","Context","articlesToShow","slice","map","articleItem","ArticleCard","ArticlesPage","_location$state$showA","setIsShowAllArticles","useState","showAllArticles","t","Container","SectionTitle","ArticleList","onClick","toggleArticles"],"sourceRoot":""}