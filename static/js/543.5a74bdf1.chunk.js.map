{"version":3,"file":"static/js/543.5a74bdf1.chunk.js","mappings":"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","sources":["data/certificates.js","pages/Information/CertificatesPage.jsx"],"sourcesContent":["export const certificates = [\n  {\n    id: 1,\n    name: 'КВК',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 2,\n    name: 'КПСВВ',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 3,\n    name: 'КСВВ',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 4,\n    name: 'КСПВ',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 5,\n    name: 'КСПЭВ',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 6,\n    name: 'КПС',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 7,\n    name: 'КПСВЭВ',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 8,\n    name: 'КСВЭВ',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 9,\n    name: 'КМВВ',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 10,\n    name: 'ПКСВ',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 11,\n    name: 'ПНСВ',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 12,\n    name: 'ПРППМ',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 13,\n    name: 'ПТПЖ',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 14,\n    name: 'ТРВ',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n  {\n    id: 15,\n    name: 'ТРП',\n    certificate1: require('../assets/images/certificate_1.webp'),\n    certificate2: require('../assets/images/certificate_2.webp'),\n  },\n];\n","import { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Context } from 'context/Context';\nimport { certificates } from 'data/certificates.js';\nimport Container from 'components/common/Container';\nimport SectionTitle from 'components/common/SectionTitle';\nimport FullScreenLetter from 'components/common/FullScreenLetter';\n\nconst CertificatesPage = () => {\n  const { isModalOpen, setIsModalOpen } = useContext(Context);\n  const { certificateId } = useParams();\n  const [selectedId, setSelectedId] = useState(Number(certificateId) || 1);\n  const [certificate, setCertificate] = useState(certificates[0]);\n  const [modalImage, setModalImage] = useState(null);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n\n  const handleCertificateSelect = id => {\n    setSelectedId(id);\n    setCertificate(certificates.find(certificate => certificate.id === id));\n  };\n\n  const handleImageClick = imageSrc => {\n    setModalImage(imageSrc);\n    setIsModalOpen(!isModalOpen);\n  };\n\n  return (\n    <section>\n      <Container>\n        <SectionTitle title={t('certificatesSection.title')} />\n        <div className=\"mt-3 flex justify-center gap-x-20 sm:mt-7 ml:justify-start xl:gap-x-32\">\n          <div className=\"flex flex-col ml:flex-row\">\n            <img\n              onClick={() => handleImageClick(certificate.certificate1)}\n              src={certificate.certificate1}\n              alt=\"certificate\"\n              className=\"cursor-pointer\"\n              width={380}\n            />\n            <img\n              onClick={() => handleImageClick(certificate.certificate2)}\n              src={certificate.certificate2}\n              alt=\"certificate\"\n              className=\"cursor-pointer\"\n              width={380}\n            />\n          </div>\n          <ul className=\"flex flex-col justify-between text-sm font-bold tracking-widest\">\n            {certificates.map(({ id, name }) => (\n              <li\n                key={id}\n                onClick={() => handleCertificateSelect(id)}\n                className={`cursor-pointer ${\n                  selectedId === id ? 'underline' : 'no-underline'\n                }`}\n              >\n                {name}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <FullScreenLetter image={modalImage} />\n      </Container>\n    </section>\n  );\n};\n\nexport default CertificatesPage;\n"],"names":["certificates","id","name","certificate1","require","certificate2","CertificatesPage","isModalOpen","setIsModalOpen","useContext","Context","certificateId","useParams","selectedId","setSelectedId","useState","Number","certificate","setCertificate","modalImage","setModalImage","t","useTranslation","useEffect","window","scrollTo","top","behavior","handleImageClick","imageSrc","_jsx","children","_jsxs","Container","SectionTitle","title","className","onClick","src","alt","width","map","_ref","find","handleCertificateSelect","FullScreenLetter","image"],"sourceRoot":""}